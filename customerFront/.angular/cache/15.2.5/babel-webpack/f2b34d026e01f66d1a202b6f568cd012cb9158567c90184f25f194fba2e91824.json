{"ast":null,"code":"import { Customer } from 'src/app/models/customer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/customer.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class NewCustomerComponent {\n  constructor(customerService, toastr, router) {\n    this.customerService = customerService;\n    this.toastr = toastr;\n    this.router = router;\n    this.companyName = '';\n    this.contactName = '';\n    this.contactTitle = '';\n    this.address = '';\n    this.city = '';\n    this.region = '';\n    this.postalCode = '';\n    this.country = '';\n    this.phone = '';\n    this.fax = '';\n  }\n  ngOnInit() {}\n  onCreate() {\n    const customer = new Customer(this.companyName, this.contactName, this.contactTitle, this.address, this.city, this.region, this.postalCode, this.country, this.phone, this.fax);\n    this.customerService.save(customer).subscribe(data => {\n      this.toastr.success('Cliente Creado con éxito', 'OK', {\n        timeOut: 3000\n      });\n      this.router.navigate(['/']);\n    }, err => {\n      this.toastr.error(err.error.meensaje, 'Fail', {\n        timeOut: 3000\n      });\n      this.router.navigate(['/']);\n    });\n  }\n}\nNewCustomerComponent.ɵfac = function NewCustomerComponent_Factory(t) {\n  return new (t || NewCustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.Router));\n};\nNewCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewCustomerComponent,\n  selectors: [[\"app-new-customer\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\", \"mt-5\"], [1, \"col-md-4\", \"mx-auto\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"companyName\"], [\"type\", \"text\", \"id\", \"companyName\", \"name\", \"companyName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"contactName\"], [\"type\", \"text\", \"id\", \"contactName\", \"name\", \"contactName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-outline-success\", \"btn-block\", 3, \"disabled\"]],\n  template: function NewCustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function NewCustomerComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onCreate();\n      });\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Nombre de la Empresa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function NewCustomerComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.companyName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Precio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NewCustomerComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.contactName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 10);\n      i0.ɵɵtext(14, \"Crear\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.companyName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.contactName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,yBAAyB;;;;;;AAUlD,OAAM,MAAOC,oBAAoB;EAc/BC,YACUC,eAAgC,EAChCC,MAAqB,EACrBC,MAAc;IAFd,oBAAe,GAAfF,eAAe;IACf,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IAfhB,gBAAW,GAAG,EAAE;IAChB,gBAAW,GAAG,EAAE;IAChB,iBAAY,GAAG,EAAE;IACjB,YAAO,GAAG,EAAE;IACZ,SAAI,GAAG,EAAE;IACT,WAAM,GAAG,EAAE;IACX,eAAU,GAAG,EAAE;IACf,YAAO,GAAG,EAAE;IACZ,UAAK,GAAG,EAAE;IACV,QAAG,GAAG,EAAE;EAOH;EAELC,QAAQ,IAER;EAEAC,QAAQ;IACN,MAAMC,QAAQ,GAAG,IAAIR,QAAQ,CAAC,IAAI,CAACS,WAAW,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,YAAY,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,MAAM,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,GAAG,CAAC;IAC/K,IAAI,CAACf,eAAe,CAACgB,IAAI,CAACX,QAAQ,CAAC,CAACY,SAAS,CAC3CC,IAAI,IAAG;MACL,IAAI,CAACjB,MAAM,CAACkB,OAAO,CAAC,0BAA0B,EAAE,IAAI,EAAE;QACpDC,OAAO,EAAE;OACV,CAAC;MACF,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,EACDC,GAAG,IAAG;MACJ,IAAI,CAACrB,MAAM,CAACsB,KAAK,CAACD,GAAG,CAACC,KAAK,CAACC,QAAQ,EAAG,MAAM,EAAE;QAC7CJ,OAAO,EAAE;OACV,CAAC;MACF,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CACF;EACH;;AAxCWvB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjCC,8BAAuB;MAGLA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACzBD,8BAAwB;MACKA,oCAAoB;MAAAA,iBAAQ;MACrDA,gCACmC;MAAnCA;QAAA;MAAA,EAAyB;MADzBA,iBACmC;MAEvCA,8BAAwB;MACKA,uBAAM;MAAAA,iBAAQ;MACvCA,iCACmC;MAAnCA;QAAA;MAAA,EAAyB;MADzBA,iBACmC;MAEvCA,mCAAwE;MAAAA,sBAAK;MAAAA,iBAAS;;;;MAPlFA,eAAyB;MAAzBA,yCAAyB;MAKzBA,eAAyB;MAAzBA,yCAAyB;MAEqBA,eAAqB;MAArBA,qCAAqB","names":["Customer","NewCustomerComponent","constructor","customerService","toastr","router","ngOnInit","onCreate","customer","companyName","contactName","contactTitle","address","city","region","postalCode","country","phone","fax","save","subscribe","data","success","timeOut","navigate","err","error","meensaje","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\customerFront\\src\\app\\customer\\new-customer\\new-customer.component.ts","C:\\customerFront\\src\\app\\customer\\new-customer\\new-customer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomerService } from 'src/app/service/customer.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-customer',\n  templateUrl: './new-customer.component.html',\n  styleUrls: ['./new-customer.component.css']\n})\nexport class NewCustomerComponent {\n\n  companyName = '';\n  contactName = '';\n  contactTitle = '';\n  address = '';\n  city = '';\n  region = '';\n  postalCode = '';\n  country = '';\n  phone = '';\n  fax = '';\n\n\n  constructor(\n    private customerService: CustomerService,\n    private toastr: ToastrService,\n    private router: Router\n    ){ }\n\n  ngOnInit(){\n\n  }\n\n  onCreate(): void{\n    const customer = new Customer(this.companyName, this.contactName, this.contactTitle, this.address, this.city, this.region, this.postalCode, this.country, this.phone, this.fax);\n    this.customerService.save(customer).subscribe(\n      data => {\n        this.toastr.success('Cliente Creado con éxito', 'OK', {\n          timeOut: 3000\n        });\n        this.router.navigate(['/']);\n      },\n      err => {\n        this.toastr.error(err.error.meensaje , 'Fail', {\n          timeOut: 3000\n        });\n        this.router.navigate(['/']);\n      }\n    )\n  }\n}\n","\n<div class=\"container\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-4 mx-auto\">\n            <form (ngSubmit)=\"onCreate()\" novalidate #f=\"ngForm\">\n                <div class=\"form-group\">\n                    <label for=\"companyName\">Nombre de la Empresa</label>\n                    <input type=\"text\" class=\"form-control\" id=\"companyName\" name=\"companyName\"\n                    [(ngModel)]=\"companyName\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"contactName\">Precio</label>\n                    <input type=\"text\" class=\"form-control\" id=\"contactName\" name=\"contactName\"\n                    [(ngModel)]=\"contactName\" required>\n                </div>\n                <button class=\"btn btn-outline-success btn-block\" [disabled]=\"!f.valid\">Crear</button>\n            </form>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}